import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.multioutput import MultiOutputClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report
import joblib

# === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
train_df = pd.read_csv("train_clean.csv")
test_df = pd.read_csv("test_clean.csv")
test_labels = pd.read_csv("test_labels.csv")

# === –°—ç–º–ø–ª–∏—Ä—É–µ–º 10 000 —Å—Ç—Ä–æ–∫ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è ===
train_df = train_df.sample(n=10000, random_state=42)

# === –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å -1 –≤ –º–µ—Ç–∫–∞—Ö ===
test_labels = test_labels[(test_labels != -1).all(axis=1)]
test_df = test_df[test_df["id"].isin(test_labels["id"])]

# === –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∏ –º–µ—Ç–æ–∫ ===
X_train = train_df["comment_text"]
y_train = train_df.drop(columns=["id", "comment_text"])

X_test = test_df["comment_text"]
y_test = test_labels.drop(columns=["id"])

# === TF-IDF –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ===
vectorizer = TfidfVectorizer(max_features=10000, stop_words="english")
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# === –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ ===
rf = RandomForestClassifier(
    n_estimators=50,
    max_depth=15,
    random_state=42,
    n_jobs=-1
)
model = MultiOutputClassifier(rf)
model.fit(X_train_vec, y_train)

# === –û—Ü–µ–Ω–∫–∞ ===
y_pred = model.predict(X_test_vec)
print("üîç Classification Report:")
print(classification_report(y_test, y_pred, zero_division=0))

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ===
joblib.dump(model, "app/emotion_model.pkl")
joblib.dump(vectorizer, "app/vectorizer.pkl")
print("–ú–æ–¥–µ–ª—å –∏ –≤–µ–∫—Ç–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫—É app/")
